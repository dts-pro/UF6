import{_ as a,c as i,o as r,a4 as s}from"./chunks/framework.hPoXimdX.js";const p=JSON.parse('{"title":"Exercicis","description":"","frontmatter":{},"headers":[],"relativePath":"9-exercicis.md","filePath":"9-exercicis.md"}'),t={name:"9-exercicis.md"};function c(n,e,o,u,l,d){return r(),i("div",null,e[0]||(e[0]=[s('<h1 id="exercicis" tabindex="-1">Exercicis <a class="header-anchor" href="#exercicis" aria-label="Permalink to &quot;Exercicis&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">NOTA:</p><p><strong>Cada apartat correspon a una funció diferent. Cada exercici correspon a un programa diferent.</strong></p></div><h2 id="exercicis-nivell-basic" tabindex="-1">Exercicis - Nivell bàsic <a class="header-anchor" href="#exercicis-nivell-basic" aria-label="Permalink to &quot;Exercicis - Nivell bàsic&quot;">​</a></h2><h3 id="exercici-1" tabindex="-1">Exercici 1 <a class="header-anchor" href="#exercici-1" aria-label="Permalink to &quot;Exercici 1&quot;">​</a></h3><p>a) Escriu una funció que retorne la suma dels valors d’un vector d’enters.<br> b) Escriu una funció que retorne la mitjana dels valors d’un vector d’enters.<br> c) Escriu una funció que retorne el valor màxim d’un vector d’enters.<br> d) Escriu un programa que cree un vector amb N valors enters (generats de forma aleatòria) i mostre la suma, la mitjana i el màxim.</p><h3 id="exercici-2" tabindex="-1">Exercici 2 <a class="header-anchor" href="#exercici-2" aria-label="Permalink to &quot;Exercici 2&quot;">​</a></h3><p>a) Escriu una funció que retorne quantes vocals conté una cadena de text.<br> b) Escriu una funció que retorne quants espais conté una cadena de text.<br> c) Escriu una funció que retorne quantes consonants conté una cadena de text.<br> d) Escriu un programa que llig una frase per teclat i mostre el nombre de vocals, el nombre d&#39;espais i el nombre consonants.</p><h3 id="exercici-3" tabindex="-1">Exercici 3 <a class="header-anchor" href="#exercici-3" aria-label="Permalink to &quot;Exercici 3&quot;">​</a></h3><p>a) Escriu una funció que rebrà una cadena i retornarà la contrària (inversa).<br> b) Escriu una funció que rebrà dos cadenes i retornarà true o false en funció de si són iguals o no.<br> c) Escriu un programa que demana per teclat una paraula i mostre si és palíndrom usant les funcions anteriors.</p><h2 id="exercicis-nivell-mitja" tabindex="-1">Exercicis - Nivell mitjà <a class="header-anchor" href="#exercicis-nivell-mitja" aria-label="Permalink to &quot;Exercicis - Nivell mitjà&quot;">​</a></h2><h3 id="exercici-4" tabindex="-1">Exercici 4 <a class="header-anchor" href="#exercici-4" aria-label="Permalink to &quot;Exercici 4&quot;">​</a></h3><p>a) Escriu una funció que mostre un menú amb les opcions: sumar, restar, multiplicar, dividir i acabar el programa.<br> b) Escriu una funció que retorne la suma de dos nombres rebuts per paràmetres.<br> c) Escriu una funció que retorne la resta de dos nombres rebuts per paràmetres.<br> d) Escriu una funció que retorne la multiplicació de dos nombres rebuts per paràmetres.<br> e) Escriu una funció que retorne la divisió de dos nombres rebuts per paràmetres (tenint en compte la divisió per zero).<br> f) Escriu un programa que demane dos nombres, mostre el menú i permeta triar una opció. Ho farà fins que l&#39;usuari seleccione l&#39;opció d&#39;eixir del programa.</p><h3 id="exercici-5" tabindex="-1">Exercici 5 <a class="header-anchor" href="#exercici-5" aria-label="Permalink to &quot;Exercici 5&quot;">​</a></h3><p>Dissenya un sistema que permeta afegir un estudiant, marcar la seva assistència i mostrar l’estat d’assistència de tots els estudiants. Quan l’usuari vulga afegir un estudiant, el programa demanarà el nom i l’incorporarà a la llista de persones matriculades només si no hi és ja, assignant-li automàticament l’estat de no assistit; si el nom ja existeix, no fa cap canvi. Quan l’usuari tria marcar assistència, el sistema demana el nom de l’estudiant i, si el troba a la llista, canvia el seu estat al de assistit, i si no existeix, informa que no es pot marcar l’assistència d’un estudiant desconegut. Quan l’usuari demana veure els assistents, el programa mostrarà tots els noms i si han assistit o no. Finalment, l&#39;usuari podrà finalitzar quan vulga l&#39;execució del programa.</p><h3 id="exercici-6" tabindex="-1">Exercici 6 <a class="header-anchor" href="#exercici-6" aria-label="Permalink to &quot;Exercici 6&quot;">​</a></h3><p>Un sistema de gestió acadèmica permet registrar alumnes amb el seu nom i les notes de les cinc assignatures. A partir d’aquest registre, qualsevol vegada que l’usuari ho sol·licite, el programa mostrarà el llistat d&#39;alumnes amb mitjana de notes superior a 9. També ofereix la possibilitat de determinar quin alumne presenta la variabilitat de notes més gran, és a dir, amb major diferència entre la seva nota més alta i la més baixa.</p><h2 id="exercicis-recursivitat" tabindex="-1">Exercicis - Recursivitat <a class="header-anchor" href="#exercicis-recursivitat" aria-label="Permalink to &quot;Exercicis - Recursivitat&quot;">​</a></h2>',17)]))}const x=a(t,[["render",c]]);export{p as __pageData,x as default};
